はい、承知いたしました。先のMarkdown形式のまとめに、SIPプロキシがViaヘッダ、Record-Routeヘッダ、Contactヘッダをどのように処理するかについての内容を追加します。

---

# SIPメッセージのIPアドレスの流れ：NATとプロキシ環境

SIP (Session Transfer Protocol) における通信は、特に**NAT (Network Address Translation)** 環境や**プロキシサーバー**を介する場合、メッセージの送信元・宛先IPアドレスが複雑に変化します。ここでは、`INVITE`から`BYE`までの主要なメッセージがどのようにルーティングされ、IPアドレスが使われるかを解説します。

### 前提となるSIPヘッダの理解

まず、IPアドレスの決定に大きく関わるSIPヘッダについて理解しておきましょう。

* **Viaヘッダ**: SIPリクエストが通過したプロキシの経路を記録します。応答メッセージは、このViaヘッダの記録を逆順にたどって返されます。NAT環境では、プロキシが受信したパケットの送信元IPアドレスとポートを`received`および`rport`パラメータとして追加することがあります。
* **Contactヘッダ**: 通信の終端となるユーザーエージェント (UA、SIP電話機など) が、後続のSIPリクエストを受け取るために使用するURI (IPアドレスとポートを含む) を示します。NAT環境では、UAのプライベートIPアドレスではなく、NATデバイスのグローバルIPアドレスが挿入される必要があります。
* **Record-Routeヘッダ**: プロキシが、ダイアログ（セッション）中の後続のSIPリクエストを自身を経由させるために挿入します。これにより、プロキシはセッション中もシグナリングパス上に留まることができます。

### シナリオ例: UA1 (NATの内側) → SIPプロキシ → UA2 (パブリックIP)

以下の登場人物でシナリオを進めます。

* **UA1**: SIP電話機 (プライベートIP: `192.168.1.100:5060`)
* **NATルータ**: UA1のネットワークに接続 (グローバルIP: `203.0.113.1`、ポートマッピング: `203.0.113.1:X` ←→ `192.168.1.100:5060`)
* **SIPプロキシ**: パブリックIPアドレス (`198.51.100.1:5060`)
* **UA2**: SIP電話機 (パブリックIP: `200.200.200.200:5060`)

---

### 1. INVITEメッセージ (UA1 → プロキシ → UA2)

1.  **UA1がINVITEを生成**:
    * **宛先IP**: SIPプロキシのIP (`198.51.100.1`)
    * **送信元IP**: UA1のプライベートIP (`192.168.1.100`)
    * **Viaヘッダ**: `192.168.1.100:5060` (UA1のローカルIP)
    * **Contactヘッダ**: `sip:UA1@192.168.1.100:5060` (UA1のローカルURI)

2.  **NATルータがINVITEを受信・変換**:
    * NATルータは、UA1からのパケットを受信し、送信元IPアドレスとポートをグローバルIPアドレスと新たなポートに変換します。
    * **送信元IP**: NATルータのグローバルIP (`203.0.113.1:X`)
    * NATルータは**SIPペイロード (ViaやContactヘッダなど) を直接変更しません**。その代わりに、この`203.0.113.1:X`宛のUDPパケットを`192.168.1.100:5060`に転送するマッピングを作成します。

3.  **SIPプロキシがINVITEを受信**:
    * プロキシは、受信したパケットの送信元IP (`203.0.113.1:X`) とViaヘッダのIP (`192.168.1.100`) を比較し、NATの存在を検出します。
    * **プロキシの処理**:
        * Viaヘッダに`received=203.0.113.1`と`rport=X`パラメータを追加し、UA1の外部から見えるIPを記録します。
        * `Record-Route`ヘッダに自身のアドレス (`sip:proxy.example.com`) を挿入し、後続のダイアログ内リクエストも自身を経由させます。
        * **ContactヘッダのURIをUA1の外部からの到達可能アドレス (`sip:UA1@203.0.113.1:X`) に書き換える**場合があります（これはプロキシの機能によります。SBC (Session Border Controller) などがこの役割を担うことが多いです）。

4.  **SIPプロキシがINVITEをUA2に転送**:
    * **宛先IP**: UA2のIPアドレス (`200.200.200.200`)
    * **送信元IP**: SIPプロキシのIPアドレス (`198.51.100.1`)

---

### 2. 180 Ringing / 183 Session Progress (UA2 → プロキシ → UA1)

1.  **UA2が応答を生成**:
    * **宛先IP**: SIPプロキシのIPアドレス (`198.51.100.1`) (受信したINVITEのViaヘッダの最上位がプロキシのアドレスだったため)
    * **送信元IP**: UA2のIPアドレス (`200.200.200.200`)
    * **Viaヘッダ**: `200.200.200.200:5060` (UA2のVia)

2.  **SIPプロキシが応答を受信**:
    * プロキシは受信した応答のViaヘッダを処理します。最上位のViaヘッダ（UA2のVia）を削除し、次に上位のViaヘッダ（UA1のVia with `received`/`rport`）を読み取ります。
    * プロキシは、その`received`と`rport`パラメータに示されたIPアドレスとポート (`203.0.113.1:X`) に応答を転送します。
    * **宛先IP**: NATルータのグローバルIPアドレス (`203.0.113.1:X`)
    * **送信元IP**: SIPプロキシのIPアドレス (`198.51.100.1`)

3.  **NATルータが応答を受信・変換**:
    * NATルータは`203.0.113.1:X`宛のパケットを受信し、以前作成したマッピングに基づいて、UA1のプライベートIPアドレスとポート (`192.168.1.100:5060`) に変換して転送します。
    * **宛先IP**: UA1のプライベートIPアドレス (`192.168.1.100`)
    * **送信元IP**: NATルータのグローバルIPアドレス (`203.0.113.1:X`)

---

### 3. 200 OK (UA2 → プロキシ → UA1)

`180 Ringing`や`183 Session Progress`と同様のフローで、UA2からUA1へ送られます。

* **UA2**: 宛先 `198.51.100.1` (プロキシ), 送信元 `200.200.200.200` (UA2)
* **プロキシ**: 宛先 `203.0.113.1:X` (NAT), 送信元 `198.51.100.1` (プロキシ)
* **NAT**: 宛先 `192.168.1.100` (UA1), 送信元 `203.0.113.1:X` (NAT)

---

### 4. ACK (UA1 → プロキシ → UA2)

`200 OK`の到着をUA2に知らせるためのメッセージです。

1.  **UA1がACKを生成**:
    * **宛先IP**: SIPプロキシのIPアドレス (`198.51.100.1`)
    * **送信元IP**: UA1のプライベートIPアドレス (`192.168.1.100`)

2.  **NATルータがACKを受信・変換**:
    * INVITEの時と同様に、送信元IPとポートをグローバルIPとマッピングされたポートに変換します。
    * **送信元IP**: NATルータのグローバルIPアドレス (`203.0.113.1:X`)

3.  **SIPプロキシがACKを受信**:
    * プロキシは`Record-Route`ヘッダが存在するため、その情報に基づいてルーティングします。
    * **宛先IP**: UA2のIPアドレス (`200.200.200.200`)
    * **送信元IP**: SIPプロキシのIPアドレス (`198.51.100.1`)

---

### 5. BYE (UA1 → プロキシ → UA2、または UA2 → プロキシ → UA1)

セッション中に発生する`BYE`メッセージは、ダイアログ内のリクエストであり、**`Record-Route`ヘッダ**と**`Contact`ヘッダ**の情報に基づいてルーティングされます。

* **UA1がBYEを送信する場合**:
    * **UA1**: 宛先 `198.51.100.1` (プロキシ), 送信元 `192.168.1.100` (UA1)
    * **NAT**: 宛先 `198.51.100.1` (プロキシ), 送信元 `203.0.113.1:X` (NAT)
    * **プロキシ**: 宛先 `200.200.200.200` (UA2), 送信元 `198.51.100.1` (プロキシ)

* **UA2がBYEを送信する場合**:
    * **UA2**: 宛先 `198.51.100.1` (プロキシ), 送信元 `200.200.200.200` (UA2)
    * **プロキシ**: 宛先 `203.0.113.1:X` (NAT), 送信元 `198.51.100.1` (プロキシ)
    * **NAT**: 宛先 `192.168.1.100` (UA1), 送信元 `203.0.113.1:X` (NAT)

---

### SIPプロキシによるヘッダの処理と書き換え

SIPプロキシが`200 OK`や`ACK`などの応答メッセージ、あるいはダイアログ内のリクエストに対してViaヘッダ、Record-Routeヘッダ、Contactヘッダをどのように処理するかは、それぞれのヘッダの役割とプロキシの機能によって異なります。

| ヘッダ名         | INVITE (リクエスト)             | 200 OK (応答)                      | ACK / BYE (ダイアログ内リクエスト)          |
| :--------------- | :------------------------------ | :--------------------------------- | :------------------------------------------ |
| **Viaヘッダ** | プロキシが**最上位に追加** | プロキシが**処理・削除**（ルーティングに利用） | プロキシが**最上位に追加** |
| **Record-Routeヘッダ** | プロキシが**挿入**（後続リクエストの強制経由用） | **含まれない** | **プロキシが処理**（Routeヘッダとしてルーティングに利用） |
| **Contactヘッダ** | UAが設定、**プロキシが書き換え得る** | UAが設定、**プロキシが書き換え得る** | **通常含まれない**（ダイアログ確立時の情報を使用） |

* **Viaヘッダ**:
    * **応答メッセージ (`200 OK`など)**: 応答は対応するリクエストのViaヘッダのスタックを逆順にたどって返されます。プロキシは自身が追加したViaヘッダのエントリを削除し、`received`や`rport`パラメータがあれば、それらの情報に基づいて次のホップへメッセージを転送します。これは「書き換え」というより「処理してルーティングに利用する」という動作です。
    * **ダイアログ内リクエスト (`ACK`, `BYE`など)**: プロキシはリクエストを転送する際、自身のViaヘッダを最上位に追加します。これはリクエストが経由した経路を記録するためです。

* **Record-Routeヘッダ**:
    * **応答メッセージ (`200 OK`など)**: Record-Routeヘッダは応答メッセージには**含まれません**。このヘッダはリクエストメッセージ、特に`INVITE`にプロキシが挿入するもので、そのダイアログ内の後続のリクエストがプロキシを経由するように強制するために使用されます。
    * **ダイアログ内リクエスト (`ACK`, `BYE`など)**: プロキシがRecord-Routeヘッダを「書き換える」ことはありません。これらのリクエストは、`INVITE`と`200 OK`の交換によって確立されたダイアログの一部として送信されます。このダイアログは、`INVITE`時にプロキシが挿入した`Record-Route`ヘッダ（これがダイアログ確立後に**Routeヘッダ**として利用される）によって、プロキシを経由するように設定されています。プロキシは、受信したリクエストの`Route`ヘッダを処理し、次のホップに転送します。

* **Contactヘッダ**:
    * **応答メッセージ (`200 OK`など)**: `INVITE`に対する`200 OK`には、応答側のUAの`Contact`ヘッダが含まれます。もし応答側のUAもNATの内側にいる場合、プロキシやSBCは、そのUAのプライベートIPアドレスを含む`Contact`ヘッダを、外部から到達可能なグローバルIPアドレスに**書き換える必要**があります。
    * **ダイアログ内リクエスト (`ACK`, `BYE`など)**: これらのリクエストには通常、`Contact`ヘッダは**含まれません**。`ACK`は`200 OK`に対する確認応答であり、`BYE`はセッション終了のリクエストです。これらのメッセージは、確立されたダイアログのコンテキスト内で送信され、ルーティングは主に`Route`ヘッダ（元々の`Record-Route`ヘッダ）と、ダイアログ確立時に交換された`Contact`ヘッダによって決定されます。

---

### メディア (RTP) のIPアドレス

SIPシグナリングとは異なり、**RTP (Real-time Transport Protocol) メディアストリーム**は、通常、UA間で直接送受信されます。SDP (Session Description Protocol) の`c=`行と`m=`行でメディアのIPアドレスとポートが通知されます。

* **INVITEのSDP**: UA1は自身のプライベートIPアドレス (`192.168.1.100`) を含んだSDPを`INVITE`に含めて送ります。
* **プロキシ/SBCによるSDPの書き換え**: NAT越えのためには、プロxyやSBC (Session Border Controller) がSDPのIPアドレスをNATのグローバルIPアドレスに書き換えたり、自身をメディアのアンカー（Relay）として機能させたりします。
    * もしプロキシがSDPのIPアドレスをNATのグローバルIPに書き換えた場合、UA2はNATルータのグローバルIP (`203.0.113.1`) に直接RTPを送信しようとします。
    * もしプロキシがRTPプロキシ/SBCとして機能する場合、UA2はRTPをプロキシに送信し、プロキシがNAT越え処理を行ってUA1に転送します。
* **200 OKのSDP**: UA2は自身のパブリックIPアドレス (`200.200.200.200`) を含んだSDPを`200 OK`に含めて送ります。

このように、RTPのIPアドレスは、NATの存在やSBCの有無、そしてSDPの書き換えの有無によって大きく異なりますが、理想的にはUA1のNATのグローバルIPアドレスとUA2のパブリックIPアドレスの間で直接通信されることになります。

---

### 重要なポイント

* **NATはSIPメッセージの中身（ヘッダ）は変更しません**。NATはIPヘッダとトランスポート層のヘッダ（TCP/UDP）しか変更しません。SIPメッセージ内のIPアドレス（Contact, Viaのパラメータなど）は、SIPプロキシやSBCなどのSIPレベルの処理を行う機器が変更する必要があります。
* **Viaヘッダ**は、応答のルーティングパスを決定します。
* **Record-Routeヘッダ**は、ダイアログ内の後続リクエスト（ACK, BYEなど）がプロキシを経由することを保証します。
* **Contactヘッダ**は、通信の終端となるUAの、他のUAからの到達可能アドレスを示します。NAT環境では、これが正しくグローバルIPアドレスに変換されていることが重要です。
* **RTP（メディア）のルーティング**は、SIPシグナリングとは異なり、通常はUA間で直接行われますが、NAT越えのためには別途STUN/TURN/ICEなどのメカニズムや、SBC/RTPプロキシが必要です。

この説明は一般的なシナリオに基づいています。SIPのNAT越えには様々な技術（STUN, TURN, ICE, SIP ALG, SBCなど）があり、それらの実装状況によって具体的なIPアドレスの流れはさらに複雑になる可能性があります。

ご不明な点がございましたら、お気軽にお尋ねください。